export declare type EasingFunc = (percent: number, ...args: any[]) => number;
export declare const Tween: {
    easeInQuad(pos: any): number;
    easeOutQuad(pos: any): number;
    easeInOutQuad(pos: any): number;
    easeInCubic(pos: any): number;
    easeOutCubic(pos: any): number;
    easeInOutCubic(pos: any): number;
    easeInQuart(pos: any): number;
    easeOutQuart(pos: any): number;
    easeInOutQuart(pos: any): number;
    easeInQuint(pos: any): number;
    easeOutQuint(pos: any): number;
    easeInOutQuint(pos: any): number;
    easeInSine(pos: any): number;
    easeOutSine(pos: any): number;
    easeInOutSine(pos: any): number;
    easeInExpo(pos: any): number;
    easeOutExpo(pos: any): number;
    easeInOutExpo(pos: any): number;
    easeInCirc(pos: any): number;
    easeOutCirc(pos: any): number;
    easeInOutCirc(pos: any): number;
    easeOutBounce(pos: any): number;
    easeInBack(pos: any): number;
    easeOutBack(pos: any): number;
    easeInOutBack(pos: any): number;
    elastic(pos: any): number;
    swingFromTo(pos: any): number;
    swingFrom(pos: any): number;
    swingTo(pos: any): number;
    bounce(pos: any): number;
    bouncePast(pos: any): number;
    easeFromTo(pos: any): number;
    easeFrom(pos: any): number;
    easeTo(pos: any): number;
    linear(pos: any): any;
    sinusoidal(pos: any): number;
    reverse(pos: any): number;
    mirror(pos: any, transition: any): any;
    flicker(pos: any): any;
    wobble(pos: any): number;
    pulse(pos: any, pulses: any): number;
    blink(pos: any, blinks: any): number;
    spring(pos: any): number;
    none(pos: any): number;
    full(pos: any): number;
};
